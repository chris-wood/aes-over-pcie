# Step 1:  Read in the source file
analyze -format vhdl -lib WORK {aes.vhd reduce_pack.vhd pcie.vhd}
analyze -format vhdl -lib WORK {sbox.vhd mix_columns.vhd state_filter_in.vhd state_filter_out.vhd shift_rows.vhd key_scheduler.vhd aes_rcu.vhd add_round_key.vhd state.vhd}
analyze -format vhdl -lib WORK {aes_top.vhd}
analyze -format vhdl -lib WORK {bridge.vhd}
analyze -format vhdl -lib WORK {pcie_top.vhd}
analyze -format vhdl -lib WORK {top_top.vhd}
elaborate top_top -arch "structural" -lib WORK -update

# Step 2: Set design constraints
# Uncomment below to set timing, area, power, etc. constraints
# set_max_delay <delay> -from "<input>" -to "<output>"
# set_max_area <area>
# set_max_total_power <power> mW
create_clock clk -name clk -period 6

#current_design .

#ungroup -flatten -all
#set_flatten true -effort high
#uniquify

# Step 3: Compile the design
#compile -map_effort medium
compile_ultra

# Step 4: Output reports
current_design .
report_timing -path full -delay max -max_paths 1 -nworst 1 > reports/$current_design.rep
report_area -hierarchy >> reports/$current_design.rep
report_power -hier >> reports/$current_design.rep

# Step 5: Output final VHDL and Verilog files
set vhdlout_architecture_name "%a"
set vhdlout_dont_write_types "true"
set vhdlout_use_packages [list osu_ami05.all ieee.std_logic_1164 ieee.numeric_std work.aes]
write -format vhdl -hierarchy -output "mapped/$current_design.vhd"
write -format verilog -hierarchy -output "mapped/$current_design.v"
echo "\nScript Done\n"
echo "\nChecking Design\n"
check_design
exit

